basePath: /api/usermanager
definitions:
  models.User:
    properties:
      createdOn:
        type: string
      firstname:
        type: string
      isActive:
        type: boolean
      lastname:
        type: string
      modifiedBy:
        $ref: '#/definitions/sql.NullInt64'
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
host: 192.168.10.137:9090
info:
  contact:
    email: dyvelt@tainosystems.com
  description: This is a mini api that allows to perform basics CRUD operations
  title: USERMANAGER API
  version: "1.0"
paths:
  /api/usermanager/adminupdateuser:
    put:
      consumes:
      - application/json
      description: Allows an admin yo edit a user's information
      responses:
        "200":
          description: The user's info are edited
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
  /api/usermanager/login:
    post:
      consumes:
      - application/json
      description: Allows a registered user to login
      responses:
        "200":
          description: Login succeed
          schema:
            type: string
        "403":
          description: Login failed
          schema:
            type: string
  /api/usermanager/logout:
    post:
      description: End a session
      responses:
        "200":
          description: Logout succeed
          schema:
            type: string
  /api/usermanager/register:
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: The firstname of the person
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: Insert a new user
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
  /api/usermanager/updatepassword:
    put:
      consumes:
      - application/json
      description: Update a user password
      responses:
        "200":
          description: Update a password
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
  /api/usermanager/updateuser:
    put:
      consumes:
      - application/json
      description: Edit a user's informations
      responses:
        "200":
          description: Infos are edited
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
  /api/usermanager/users:
    get:
      consumes:
      - application/json
      description: Get all the users
      responses:
        "200":
          description: List of all the users
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
swagger: "2.0"
